logging.level.root=info
logging.level.org.springframework.web=debug
logging.level.com.exam=debug


server.port=8090
server.servlet.context-path=/app


spring.ai.openai.api-key=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
 # 기본은 gpt-4o 임
spring.ai.openai.chat.options.model=gpt-4o-mini
### PGVector 설정
# docker desktop 먼저 설치하고 이후에 pgvector를 docker 로 설치한다. DBeaver 로 접속확인 
# docker run -it --rm --name postgres -p 5432:5432 -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=postgres pgvector/pgvector:pg16

# https://docs.spring.io/spring-ai/reference/1.0/api/vectordbs/pgvector.html 참조
spring.ai.vectorstore.pgvector.index-type=HNSW
spring.ai.vectorstore.pgvector.distance-type=COSINE_DISTANCE
spring.ai.vectorstore.pgvector.dimensions=1536

spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=postgres


# 다음은 권장함
logging.level.org.hibernate.SQL=trace

# 위 2개의 로그값들이 이쁘게 출력됨.
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.type=info

# 어떤 파라미터들이 실제로 바인딩 되는지 확인
logging.level.org.hibernate.orm.jdbc.bind=trace
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect


spring.mvc.pathmatch.matching-strategy=ant-path-matcher
spring.mvc.format.date=yyyy-MM-dd


# 언더바 자동변경 방지
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl


spring.jpa.open-in-view=false