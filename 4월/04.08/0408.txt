0408

JPA 개발 순서 

1. ERD 작성/검토 - 
나중에 테이블 생성할 것인가? - ERD 도구 사용 
자동으로 테이블 생성할 것인가? -  종이, PPT... 

2.연관관계 설계 - ERD를 참고하거나 그릴 수 있는 상황에서 작업 시작 

3. Entity 클래스 작성 

Entity - @Id 가 존재(PK) 
테이블 이름 지정 , 인덱스 지정 
조회용으로 Getter 추가 
생성일/수정일 처리하고 싶다면 @활용 @EntityListeners(value = AuditingEntityListener.class) 필요 
@ToString - 다른 엔티티를 참조하고 있다면 반드시 exclude 시켜라! 

테이블이 생성되는지 확인 할 것 

4. Repository / DTO 생성 
검색 기능 필요한가? - 동적 검색(검색 항목이 많은가?) - Querydsl 대상 / JPQL 처리 고민 

select 하는 기능들 - 가능하면 DTO로 반환할수 있는지 확인

5. Repository에 대한 테스트 반드시 진행 

------------------------------------------
서비스 계층 - 고객의 요구사항 반영 - 메서드 이름도 가능하면 고객들의 용어로 

트랜잭션 처리 / 예외 처리 가 핵심 , 로그 , 

서비스 객체는 여러 Repository를 이용해서 하나의 트랜잭션으로 처리 

가능하다면 테스트를 진행하는 것을 권장 / 시간 부족하면 건너뛸 수는 있긴함 

---------------------------------------
컨트롤러와 서비스를 바로 연결하지 말 것 
----------------------------------------
컨트롤러 계층만 작성하고 테스트 

DTO 객체를 테스트 

Postman / curl 이용해서 파라미터 수집이나 호출에 문제 없는지 확인 

@Valid/@Validated  DTO 검증 

컨트롤러에서 예외에 대한 처리 @ControllerAdvice, @RestControllerAdvice 

---------------------------------------

연관관계 규칙 

ERD로 보고 판단해라 

FK가 관계의 주어

단방향만 고려해라 

@ManyToOne이 가장 흔하다. @ManyToMany는 존재하지 않는다. 

@ManyToOne 

반드시 필수적으로 Fetch. LAZY 처리 
@ToString 제외 - 테스트할 때 문제가 됨 

Dummy 데이터 추가 
- Test코드를 작성해서 하는 방법 
- DB에 SQL로 작성해서 처리 (나중에 복구가 쉽다) 


목록 쿼리 ------------> 내가 원하는 데이터를 미리 그려보는 작업 (어떤 컬럼들이 어떻게 나올것인지)

- Querydsl을 쓸까? 말까? 

- JPQL만을 이용해서 조인 처리를 연습한 후에 

- Querydsl로 전환 

목록 데이터의 유형 

grouping 되는 데이터 (메인 엔티티)

- 게시물 번호 ... 댓글 숫자, 좋아요 숫자 - join처리 + group by 

하위 엔티티들이 연결되는 데이터 (주문 목록) 

주문 
 - 주문 상세 
주문 
 - 주문 상세 1
 - 주문 상세 2

@OneToMany 와 @ElementCollection 의 구세주는 @BatchSize


목록 + 하위 엔티티들 까지 처리해야 하는 경우 

Paging then join select 




---------
DTO 로 변환 

인증한 사용자 정보를 메서드에서 활용 

DTO의 특정 필드 값과 사용자 정보 매칭  - 

403에러 제어 
JPA와 회원 처리 
커스텀 로그인/로그아웃 




















